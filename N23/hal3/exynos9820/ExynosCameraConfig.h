/*
 * Copyright 2017, Samsung Electronics Co. LTD
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed toggle an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*!
 * \file      ExynosCameraConfig.h
 * \brief     hearder file for ExynosCameraConfig
 * \author    Pilsun Jang(pilsun.jang@samsung.com)
 * \date      2013/7/15
 *
 */

#ifndef EXYNOS_CAMERA_CONFIG_H__
#define EXYNOS_CAMERA_CONFIG_H__

#include "VendorVideoAPI.h"
#include "ExynosCameraCommonMacroUtils.h"
#include "ExynosCameraCommonEnum.h"

/* frame with smart pointer */
#define USE_SMARTPOINTER_FRAME

#ifndef USE_VENDOR_SPECIFIC_CONFIG_HEADER

#define SUPPORT_64BITS
#ifndef CAMERA_DATA_PATH
#define CAMERA_DATA_PATH "/data/vendor/camera/"
#endif

/******************************
 * Basic Device Features *
 ******************************/
#define CAMERA_OPEN_ID_REAR_0       0
#define CAMERA_OPEN_ID_FRONT_1      1

/******************************
 * Debugging Configurations *
 ******************************/
#define MONITOR_LOG_SYNC
#define MONITOR_LOG_SYNC_INTERVAL 100
#define PIPELINE_MAX_DEPTH 8


/* #define PREVIEW_DURATION_DEBUG */
/* #define DEBUG_RAWDUMP */
/* #define YUV_DUMP */
/* #define DEBUG_STREAM_CONFIGURATIONS */

#ifdef USES_CAMERA_EXYNOS_STR
#define SUPPORT_STR
#endif

/* Exynos Facial LandMarks Feature */
#ifdef EXYNOS_HAL_FLM
#define EXYNOS_FLM_MAX_POINTS   165
#endif

#define CAMERA_PREVIEW_EXPOSURE_TIME_LIMIT          (100000)

/***********************
 * Size Configurations *
 ***********************/
#define LCD_SIZE_DEFAULT                (0)
#define LCD_SIZE_800_480                (1)
#define LCD_SIZE_1280_720               (2)
#define LCD_SIZE_1920_1080              (3)
#define LCD_SIZE_2560_1440              (4)

#define CAMERA_LCD_SIZE                 LCD_SIZE_2560_1440

//#define PIP_CAMERA_SUPPORTED
//#define PIP_CAMERA_MAX_YUV_STREAM       (2)
//#define PIP_CAMERA_MAX_YUV_HEIGHT       (1080)
//#define PIP_CAMERA_MAX_YUV_SIZE         (1920 * PIP_CAMERA_MAX_YUV_HEIGHT)

#define CAMERA_BCROP_ALIGN              (2)
#define CAMERA_MCSC_ALIGN               (2)
#define CAMERA_3AA_DS_ALIGN_W           (2)

#define CAMERA_TPU_CHUNK_ALIGN_W        (64)
#define CAMERA_TPU_CHUNK_ALIGN_H        (4)
#define CAMERA_16PX_ALIGN               (16)

/* This value for GSC alignment refer to "csc.h" */
#define GSCALER_IMG_ALIGN               (2)
/* This value for MFC alignment */
#define MFC_ALIGN                       (16)

#define USE_WQHD_RECORDING
#define USE_UHD_RECORDING
#define USE_ISP_BUFFER_SIZE_TO_BDS

#define SUPPORT_X10_ZOOM
#define SCALER_MAX_SCALE_UP_RATIO       (10)

/* Following flags are used in Single chain configuration.
   Defined here to prevent compilation error */
#define M2M_SCALER_MAX_DOWNSCALE_RATIO  (16)
#define MCSC_DOWN_RATIO_SMALL_YUV       (2)

#define USE_CAMERA_SIZE_TABLE           (true)

#define HIGH_RESOLUTION_MIN_PIXEL_SIZE  (12 * 1024 * 1024) /* 12MP pixel */
#define FHD_PIXEL_SIZE                  (1920 * 1080)

/* UHD 4:3 */
#define UHD_DVFS_CEILING_WIDTH          (3840)
#define UHD_DVFS_CEILING_HEIGHT         (2880)

#define UHD_16X9_DVFS_CEILING_WIDTH          (3840)
#define UHD_16X9_DVFS_CEILING_HEIGHT         (2160)

#define YUVSTALL_DSCALED_SIZE_W         (1920)
#define YUVSTALL_DSCALED_SIZE_H         (1080)

/*
 * DCP Disparity Buffer size
 * Disparity = 656 x 480
 * Confidence = 640 x 480 (8 bit per pixel)
 * Master(RGB) = 640 x 480 x 3 (24 bit per pixel)
 */
#define DCP_DISPARITY_BUFFER_SIZE_W		ROUND_UP((656 + (640 * 4)), CAMERA_16PX_ALIGN)
#define DCP_DISPARITY_BUFFER_SIZE_H		ROUND_UP((480 * 5), CAMERA_16PX_ALIGN)

#define MAX_VRA_INPUT_WIDTH     (640)
#define MAX_VRA_INPUT_HEIGHT    (480)

#define CAMERA_ME_WIDTH         (320)
#define CAMERA_ME_HEIGHT        (240)
#define CAMERA_ME_MAX_BUFFER    (32)

#ifdef USES_SW_VDIS
#define VIDEO_MARGIN_FHD_W 2304
#define VIDEO_MARGIN_FHD_H 1296
#define VIDEO_MARGIN_HD_W 1536
#define VIDEO_MARGIN_HD_H 864
#define NUM_SW_VDIS_INTERNAL_BUFFERS 25
#endif

/* configuration for long exposure capture */
//#define USE_LONGEXPOSURECAPTURE
#ifdef USE_LONGEXPOSURECAPTURE
#define USE_LONGEXPOSURECAPTURE_CONTROL_REQUEST
#define ERROR_RESULT_LONGEXPOSURECAPTURE_DALAY_COUNT  (20*10)
#define LONG_EXPSOTURECAPTURE_RETRY (30*6) /* 200ms * 180 : 34sec */
#endif


/**************************
 * Control Configurations *
 **************************/
#define USE_SUBDIVIDED_EV

/* #define SET_SETFILE_BY_SHOT */
#define SET_SETFILE_BY_SET_CTRL
#ifdef SET_SETFILE_BY_SET_CTRL
#define SET_SETFILE_BY_SET_CTRL_3AA     (false)
#define SET_SETFILE_BY_SET_CTRL_ISP     (true)
#endif
#define BINNING_SETFILE_INDEX           ISS_SUB_SCENARIO_FHD_240FPS

/********************************
 * User Scenario Configurations *
 ********************************/
#define DUAL_CAMERA_SUPPORTED
#define USE_HIGHSPEED_RECORDING         (true)

//#define USE_DUAL_CAMERA
#ifdef USE_DUAL_CAMERA
#define USE_DUAL_PREVIEW_HW             (false)
#define USE_DUAL_PREVIEW_SW             (true)
#define USE_DUAL_REPROCESSING_HW        (false)
#define USE_DUAL_REPROCESSING_SW        (true)

#define SUPPORT_MASTER_SENSOR_STANDBY   (true)
#define SUPPORT_SLAVE_SENSOR_STANDBY    (true)

#define SUPPORT_MASTER_SENSOR_STANDBY   (true)
#define SUPPORT_SLAVE_SENSOR_STANDBY    (true)

#define DCP_DISPARITY_WIDTH             (640)
#define DCP_DISPARITY_HEIGHT            (480)
#define DCP_MAIN_DS_WIDTH               (640)
#define DCP_MAIN_DS_HEIGHT              (480)
#define DCP_SLAVE_DS_WIDTH              (640)
#define DCP_SLAVE_DS_HEIGHT             (480)

#if (USE_DUAL_PREVIEW_SW)
#define NUM_FUSION_BUFFERS              (14)
#else
#define NUM_FUSION_BUFFERS              (0)
#endif
#define DUAL_TRANSITION_FRAME_COUNT     (30)
#define DUAL_CAMERA_TELE_RATIO          (2)

#define DUAL_SWITCH_TRANSITION_FRAME_COUNT (10)
#define DUAL_TRANSITION_FRAME_COUNT     (30)
#define DUAL_CAPTURE_LOCK_COUNT         (30)
#define DUAL_CAMERA_TELE_RATIO          (2)
#define SYNC_WAITING_COUNT              (2)

#endif

#ifdef BOARD_CAMERA_EARLY_FD
#define USE_EARLY_FD_PREVIEW
//#define USE_EARLY_FD_REPROCES
#endif

/* #define SUPPORT_GMV */

#if (USE_SUPPORT_HFD)
#define SUPPORT_HFD
#endif

#if (USE_SLSI_PLUGIN)
#define SLSI_PLUGIN
#endif

#ifdef BOARD_CAMERA_3AA_DNG
#define USE_3AA_DNG                     (true)
#endif

#ifdef USE_DUAL_CAMERA
#define USES_DUAL_REAR_ZOOM
//#define USES_DUAL_REAR_PORTRAIT
#endif

#ifdef USES_DUAL_REAR_ZOOM
#define DUAL_PREVIEW_SYNC_MODE_MIN_ZOOM_RATIO 1.5f
#define DUAL_PREVIEW_SYNC_MODE_MAX_ZOOM_RATIO 4.0f
#define DUAL_CAPTURE_SYNC_MODE_MIN_ZOOM_RATIO 1.5f
#define DUAL_CAPTURE_SYNC_MODE_MAX_ZOOM_RATIO 2.0f
#define DUAL_SWITCHING_SYNC_MODE_MIN_ZOOM_RATIO 1.5f
#define DUAL_SWITCHING_SYNC_MODE_MAX_ZOOM_RATIO 2.0f
#endif

/*********************************
 * Internal Logic Configurations *
 *********************************/
#define INITIAL_SKIP_FRAME              (8)
#define VISION_SKIP_FRAME               (4)

#define USE_CAMERA2_USE_FENCE
#define USE_SW_FENCE

//#define SENSOR_NAME_GET_FROM_FILE

/* #define RESERVED_MEMORY_ENABLE */
#define RESERVED_BUFFER_COUNT_MAX       (0)

/* #define FPS_CHECK */
#define FIRST_PREVIEW_TIME_CHECK /* to get time processCaptureRequest() ~ first preview result to frameworks */

#define USE_FD_AE
#define FD_ROTATION                     (true)

#define SUPPORT_BACK_HW_VDIS                (false)
#define SUPPORT_FRONT_HW_VDIS               (false)

#define HW_VDIS_W_RATIO                 (1.2f)
#define HW_VDIS_H_RATIO                 (1.2f)

#define USE_FASTEN_AE_STABLE            (false)
#define USE_FASTEN_AE_STABLE_FRONT      (false)

#define FASTEN_AE_FPS                   (120)
#define FASTEN_AE_FPS_FRONT             (112)
#define MULTI_BUFFER_BASE_FPS           (60)
#define DEFAULT_BINNING_RATIO           (1)
#define MIN_BINNING_RATIO               (1000)
#define MAX_BINNING_RATIO               (6000)

#ifdef SENSOR_NAME_GET_FROM_FILE
#define SENSOR_NAME_PATH_BACK "/sys/class/camera/rear/rear_sensorid"
#define SENSOR_NAME_PATH_BACK_1 "/sys/class/camera/rear/rear2_sensorid"
#define SENSOR_NAME_PATH_FRONT "/sys/class/camera/front/front_sensorid"
#define SENSOR_NAME_PATH_SECURE "/sys/class/camera/secure/secure_sensorid"
#endif
#define SENSOR_FW_PATH_BACK "/sys/class/camera/rear/rear_camfw"
#define SENSOR_FW_PATH_BACK_1 "/sys/class/camera/rear/rear2_camfw"
#define SENSOR_FW_PATH_FRONT "/sys/class/camera/front/front_camfw"

/* flashlight control */
#define TORCH_REAR_FILE_PATH "/sys/class/camera/flash/rear_torch_flash"
#define TORCH_FRONT_FILE_PATH "/sys/class/camera/flash/front_torch_flash"

#define USE_MCPIPE_SERIALIZATION_MODE
#ifdef USE_MCPIPE_SERIALIZATION_MODE
#define SUPPORT_HWFC_SERIALIZATION
#endif

#ifdef USE_PIPE_HANDLER
#define SUPPORT_VIRTUALFD_REPROCESSING
#ifdef SUPPORT_VIRTUALFD_REPROCESSING
#define VIRTUALFD_SIZE_W (144)
#define VIRTUALFD_SIZE_H (108)
/*#define DEBUG_VIRTUALFD*/ /* for debugging usage */
#endif
#endif

/* #define SUPPORT_PIP_LIMITTATION_FD */ /* Sub camera do not support FD in PIP mode */

/* #define SUPPORT_HFR_BATCH_MODE */
/* #define USE_SERVICE_BATCH_MODE */

/***********************
 * Time Configurations *
 ***********************/
#define HDR_DELAY                       (3)
#define SENSOR_REQUEST_DELAY            (2)
#define SENSOR_STANDBY_DELAY            (2)
#define ZSL_CAPTURE_REQUEST_DELAY       (1) /* To compensate ZSL timing for capture request delay */

#define CORRECT_TIMESTAMP_FOR_SENSORFUSION
#ifdef CORRECT_TIMESTAMP_FOR_SENSORFUSION
#define CORRECTION_SENSORFUSION_BACK   (-2000000) /* - 2.0ms */
#define CORRECTION_SENSORFUSION_BACK_2 (-1500000) /* - 1.5ms */
#define CORRECTION_SENSORFUSION_BACK_3 (-2000000) /* - 2.0ms */
#endif

/********************************
 * H/W Scenario Configurations *
 ********************************/
#define USE_BINNING_MODE
/* #define USE_YSUM_RECORDING */
#define USE_3AA_CROP_AFTER_BDS
#define SUPPORT_DEPTH_MAP
#ifdef SUPPORT_DEPTH_MAP
#define NUM_DEPTHMAP_BUFFERS             (6)
#define MAX_DEPTH_SIZE_W (504)
#define MAX_DEPTH_SIZE_H (378)
#endif

//#define MAX_SENSOR_GYRO_SIZE_W  // it is sensor size.
#define MAX_SENSOR_GYRO_SIZE_H (4)
#define SENSOR_GYRO_FORMAT     (V4L2_PIX_FMT_SBGGR8)

#ifdef USES_SENSOR_GYRO_FACTORY_MODE
#define SUPPORT_SENSOR_GYRO_BACK_0
//#define SUPPORT_SENSOR_GYRO_BACK_1
//#define SUPPORT_SENSOR_GYRO_FRONT_0
//#define SUPPORT_SENSOR_GYRO_FRONT_1
#endif // USES_SENSOR_GYRO_FACTORY_MODE

/* Enable the define to set the BDS_OFF mode for Recording Scenarios */
/* #define USE_BDS_OFF */

/* #define SUPPORT_HW_GDC               (true) */
/* #define SUPPORT_ME */

#define USE_SW_MCSC_REPROCESSING        (true)

/* For capture */
#define USE_JPEG_HWFC                   (false)
#define USE_JPEG_HWFC_ONDEMAND          (false)

#define MAIN_CAMERA_SINGLE_REPROCESSING     (true)
#define MAIN_CAMERA_SINGLE_SCC_CAPTURE      (false)
#define MAIN_CAMERA_DUAL_REPROCESSING       (true)
#define MAIN_CAMERA_DUAL_SCC_CAPTURE        (false)

#define FRONT_CAMERA_SINGLE_REPROCESSING    (true)
#define FRONT_CAMERA_SINGLE_SCC_CAPTURE     (false)
#define FRONT_CAMERA_DUAL_REPROCESSING      (true)
#define FRONT_CAMERA_DUAL_SCC_CAPTURE       (false)

#define USE_PURE_BAYER_REPROCESSING                    (true)
#define USE_PURE_BAYER_REPROCESSING_ON_RECORDING       (true)
#define USE_PURE_BAYER_REPROCESSING_ON_PIP             (false)
#define USE_PURE_BAYER_REPROCESSING_ON_PIP_RECORDING   (false)

#define USE_PURE_BAYER_REPROCESSING_FRONT              (true)
#define USE_PURE_BAYER_REPROCESSING_FRONT_ON_RECORDING (true)
#define USE_PURE_BAYER_REPROCESSING_FRONT_ON_PIP       (false)
#define USE_PURE_BAYER_REPROCESSING_FRONT_ON_PIP_RECORDING  (false)

#ifdef USE_DUAL_CAMERA
#define USE_PURE_BAYER_REPROCESSING_ON_DUAL            (false)
#define USE_PURE_BAYER_REPROCESSING_ON_DUAL_RECORDING  (false)
#define USE_PURE_BAYER_REPROCESSING_FRONT_ON_DUAL      (false)
#define USE_PURE_BAYER_REPROCESSING_FRONT_ON_DUAL_RECORDING  (false)
#endif

/* This USE_DYNAMIC_BAYER define is for default scenario.
 * See <ExynosCameraParameter.cpp> for details of dynamic bayer setting
 */
#define USE_DYNAMIC_BAYER               (true)
#define USE_DYNAMIC_BAYER_60FPS         (true)
#define USE_DYNAMIC_BAYER_120FPS        (true)
#define USE_DYNAMIC_BAYER_240FPS        (true)
#define USE_DYNAMIC_BAYER_480FPS        (true)

#define USE_DYNAMIC_BAYER_FRONT         (true)
#define USE_DYNAMIC_BAYER_60FPS_FRONT   (true)
#define USE_DYNAMIC_BAYER_120FPS_FRONT  (true)
#define USE_DYNAMIC_BAYER_240FPS_FRONT  (true)
#define USE_DYNAMIC_BAYER_480FPS_FRONT  (true)

enum REPROCESSING_BAYER_MODE {
    REPROCESSING_BAYER_MODE_NONE            = 0, /* This means capture do not use reprocessing */
    REPROCESSING_BAYER_MODE_PURE_ALWAYS_ON,
    REPROCESSING_BAYER_MODE_DIRTY_ALWAYS_ON,
    REPROCESSING_BAYER_MODE_PURE_DYNAMIC,
    REPROCESSING_BAYER_MODE_DIRTY_DYNAMIC,
    REPROCESSING_BAYER_MODE_MAX,
};

#define USE_DYNAMIC_SCC_REAR                (false)
#define USE_DYNAMIC_SCC_FRONT               (false)

#define USE_GSC_FOR_CAPTURE_BACK            (false)
#define USE_GSC_FOR_CAPTURE_FRONT           (false)

#define USE_VRA_FD
#define USE_MCSC_DS
/* Node num infomation */
/* back */
#define BACK_CAMERA_FLITE_NUM             FIMC_IS_VIDEO_SS0_NUM
#define BACK_2_CAMERA_FLITE_NUM             FIMC_IS_VIDEO_SS2_NUM
#define BACK_3_CAMERA_FLITE_NUM             FIMC_IS_VIDEO_SS4_NUM
#define BACK_4_CAMERA_FLITE_NUM             FIMC_IS_VIDEO_SS6_NUM

#define MAIN_CAMERA_FLITE_NUM               BACK_CAMERA_FLITE_NUM
#define MAIN_1_CAMERA_FLITE_NUM             BACK_2_CAMERA_FLITE_NUM

#define BACK_CAMERA_DEPTH_VC_NUM          FIMC_IS_VIDEO_SS0VC1_NUM
#define BACK_2_CAMERA_DEPTH_VC_NUM          FIMC_IS_VIDEO_SS2VC1_NUM
#define BACK_3_CAMERA_DEPTH_VC_NUM          FIMC_IS_VIDEO_SS4VC1_NUM
#define BACK_4_CAMERA_DEPTH_VC_NUM          FIMC_IS_VIDEO_SS6VC1_NUM

#define MAIN_CAMERA_DEPTH_VC_NUM            BACK_CAMERA_DEPTH_VC_NUM
#define MAIN_CAMERA_HAS_OWN_SCC             (false)

/* front */
#define FRONT_0_CAMERA_FLITE_NUM            FIMC_IS_VIDEO_SS1_NUM
#define FRONT_2_CAMERA_FLITE_NUM            FIMC_IS_VIDEO_SS3_NUM
#define FRONT_3_CAMERA_FLITE_NUM            FIMC_IS_VIDEO_SS5_NUM
#define FRONT_4_CAMERA_FLITE_NUM            FIMC_IS_VIDEO_SS7_NUM

#define FRONT_CAMERA_FLITE_NUM              FRONT_0_CAMERA_FLITE_NUM

#define FRONT_0_CAMERA_DEPTH_VC_NUM          FIMC_IS_VIDEO_SS1VC1_NUM
#define FRONT_2_CAMERA_DEPTH_VC_NUM          FIMC_IS_VIDEO_SS3VC1_NUM
#define FRONT_3_CAMERA_DEPTH_VC_NUM          FIMC_IS_VIDEO_SS5VC1_NUM
#define FRONT_4_CAMERA_DEPTH_VC_NUM          FIMC_IS_VIDEO_SS7VC1_NUM

#define FRONT_CAMERA_DEPTH_VC_NUM           FRONT_0_CAMERA_DEPTH_VC_NUM
#define FRONT_CAMERA_HAS_OWN_SCC            (false)

/* Vision, Secure Camera */
#define VISION_CAMERA_FLITE_NUM  FIMC_IS_VIDEO_SS1_NUM
#define SECURE_CAMERA_FLITE_NUM  FIMC_IS_VIDEO_SS3_NUM  //IRIS use FIMC_IS_VIDEO_SS3_NUM

/* H/W path configuration */
/* Preview */
/* FLITE - 3AA */
#define MAIN_CAMERA_SINGLE_FLITE_3AA_OTF    (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_SINGLE_FLITE_3AA_OTF   (HW_CONNECTION_MODE_OTF)
#define MAIN_CAMERA_PIP_FLITE_3AA_OTF       (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_PIP_FLITE_3AA_OTF      (HW_CONNECTION_MODE_OTF)
#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_FLITE_3AA_OTF      (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_DUAL_FLITE_3AA_OTF     (HW_CONNECTION_MODE_OTF)
#define SUB_CAMERA_DUAL_FLITE_3AA_OTF       (HW_CONNECTION_MODE_OTF)
#endif

/* 3AA - ISP */
#define MAIN_CAMERA_SINGLE_3AA_ISP_OTF      (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_SINGLE_3AA_ISP_OTF     (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_PIP_3AA_ISP_OTF         (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_PIP_3AA_ISP_OTF        (HW_CONNECTION_MODE_M2M)
#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_3AA_ISP_OTF        (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_DUAL_3AA_ISP_OTF       (HW_CONNECTION_MODE_M2M)
#define SUB_CAMERA_DUAL_3AA_ISP_OTF         (HW_CONNECTION_MODE_M2M)
#endif

/* ISP - MCSC */
#define MAIN_CAMERA_SINGLE_ISP_MCSC_OTF     (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_SINGLE_ISP_MCSC_OTF    (HW_CONNECTION_MODE_OTF)
#define MAIN_CAMERA_PIP_ISP_MCSC_OTF        (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_PIP_ISP_MCSC_OTF       (HW_CONNECTION_MODE_OTF)
#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_ISP_MCSC_OTF       (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_DUAL_ISP_MCSC_OTF      (HW_CONNECTION_MODE_OTF)
#define SUB_CAMERA_DUAL_ISP_MCSC_OTF        (HW_CONNECTION_MODE_OTF)
#endif

#ifdef USE_DUAL_CAMERA
/* ISP - DCP */
#define MAIN_CAMERA_SINGLE_ISP_DCP_OTF      (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_SINGLE_ISP_DCP_OTF     (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_PIP_ISP_DCP_OTF         (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_PIP_ISP_DCP_OTF        (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_DUAL_ISP_DCP_OTF        (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_DUAL_ISP_DCP_OTF       (HW_CONNECTION_MODE_NONE)
#define SUB_CAMERA_DUAL_ISP_DCP_OTF         (HW_CONNECTION_MODE_NONE)

/* DCP - MCSC */
#define MAIN_CAMERA_SINGLE_DCP_MCSC_OTF    	(HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_SINGLE_DCP_MCSC_OTF    (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_PIP_DCP_MCSC_OTF        (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_PIP_DCP_MCSC_OTF       (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_DUAL_DCP_MCSC_OTF      	(HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_DUAL_DCP_MCSC_OTF      (HW_CONNECTION_MODE_NONE)
#define SUB_CAMERA_DUAL_DCP_MCSC_OTF        (HW_CONNECTION_MODE_NONE)
#endif /* USE_DUAL_CAMERA */

#ifndef USE_EARLY_FD_PREVIEW
/* MCSC - VRA */
#define MAIN_CAMERA_SINGLE_MCSC_VRA_OTF    	(HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_SINGLE_MCSC_VRA_OTF    (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_PIP_MCSC_VRA_OTF        (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_PIP_MCSC_VRA_OTF       (HW_CONNECTION_MODE_M2M)
/* 3AA - VRA */
#define MAIN_CAMERA_SINGLE_3AA_VRA_OTF      (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_SINGLE_3AA_VRA_OTF     (HW_CONNECTION_MODE_NONE)
#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_3AA_VRA_OTF        (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_DUAL_3AA_VRA_OTF       (HW_CONNECTION_MODE_NONE)
#define SUB_CAMERA_DUAL_3AA_VRA_OTF         (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_DUAL_MCSC_VRA_OTF      	(HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_DUAL_MCSC_VRA_OTF      (HW_CONNECTION_MODE_M2M)
#define SUB_CAMERA_DUAL_MCSC_VRA_OTF        (HW_CONNECTION_MODE_M2M)
#endif
#else /* USE_EARLY_FD_PREVIEW */
/* MCSC - VRA */
#define MAIN_CAMERA_SINGLE_MCSC_VRA_OTF     (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_SINGLE_MCSC_VRA_OTF    (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_PIP_MCSC_VRA_OTF        (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_PIP_MCSC_VRA_OTF       (HW_CONNECTION_MODE_NONE)
/* 3AA - VRA */
#define MAIN_CAMERA_SINGLE_3AA_VRA_OTF     (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_SINGLE_3AA_VRA_OTF    (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_PIP_3AA_VRA_OTF        (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_PIP_3AA_VRA_OTF       (HW_CONNECTION_MODE_M2M)
#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_3AA_VRA_OTF       (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_DUAL_3AA_VRA_OTF      (HW_CONNECTION_MODE_M2M)
#define SUB_CAMERA_DUAL_3AA_VRA_OTF        (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_DUAL_MCSC_VRA_OTF      (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_DUAL_MCSC_VRA_OTF      (HW_CONNECTION_MODE_NONE)
#define SUB_CAMERA_DUAL_MCSC_VRA_OTF        (HW_CONNECTION_MODE_NONE)
#endif
#endif

/* Reprocessing */
/* 3AA - ISP */
#define MAIN_CAMERA_SINGLE_3AA_ISP_OTF_REPROCESSING     (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_SINGLE_3AA_ISP_OTF_REPROCESSING    (HW_CONNECTION_MODE_OTF)
#define MAIN_CAMERA_PIP_3AA_ISP_OTF_REPROCESSING        (HW_CONNECTION_MODE_M2M) /* need to be same with FRONT_CAMERA_DUAL_3AA_ISP_OTF on dual case */
#define FRONT_CAMERA_PIP_3AA_ISP_OTF_REPROCESSING       (HW_CONNECTION_MODE_M2M)
#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_3AA_ISP_OTF_REPROCESSING       (HW_CONNECTION_MODE_M2M) /* need to be same with FRONT_CAMERA_DUAL_3AA_ISP_OTF on dual case */
#define FRONT_CAMERA_DUAL_3AA_ISP_OTF_REPROCESSING      (HW_CONNECTION_MODE_M2M)
#define SUB_CAMERA_DUAL_3AA_ISP_OTF_REPROCESSING        (HW_CONNECTION_MODE_M2M)
#endif

/* ISP - MCSC */
#define MAIN_CAMERA_SINGLE_ISP_MCSC_OTF_REPROCESSING    (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_SINGLE_ISP_MCSC_OTF_REPROCESSING   (HW_CONNECTION_MODE_OTF)
#define MAIN_CAMERA_PIP_ISP_MCSC_OTF_REPROCESSING       (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_PIP_ISP_MCSC_OTF_REPROCESSING      (HW_CONNECTION_MODE_OTF)
#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_ISP_MCSC_OTF_REPROCESSING      (HW_CONNECTION_MODE_OTF)
#define FRONT_CAMERA_DUAL_ISP_MCSC_OTF_REPROCESSING     (HW_CONNECTION_MODE_OTF)
#define SUB_CAMERA_DUAL_ISP_MCSC_OTF_REPROCESSING       (HW_CONNECTION_MODE_OTF)
#endif

#ifdef USE_DUAL_CAMERA
/* ISP - DCP */
#define MAIN_CAMERA_SINGLE_ISP_DCP_OTF_REPROCESSING     (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_SINGLE_ISP_DCP_OTF_REPROCESSING    (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_PIP_ISP_DCP_OTF_REPROCESSING        (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_PIP_ISP_DCP_OTF_REPROCESSING       (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_DUAL_ISP_DCP_OTF_REPROCESSING       (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_DUAL_ISP_DCP_OTF_REPROCESSING      (HW_CONNECTION_MODE_NONE)
#define SUB_CAMERA_DUAL_ISP_DCP_OTF_REPROCESSING        (HW_CONNECTION_MODE_NONE)

/* DCP - MCSC */
#define MAIN_CAMERA_SINGLE_DCP_MCSC_OTF_REPROCESSING    (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_SINGLE_DCP_MCSC_OTF_REPROCESSING   (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_PIP_DCP_MCSC_OTF_REPROCESSING       (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_PIP_DCP_MCSC_OTF_REPROCESSING      (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_DUAL_DCP_MCSC_OTF_REPROCESSING      (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_DUAL_DCP_MCSC_OTF_REPROCESSING     (HW_CONNECTION_MODE_NONE)
#define SUB_CAMERA_DUAL_DCP_MCSC_OTF_REPROCESSING       (HW_CONNECTION_MODE_NONE)
#endif

#ifndef USE_EARLY_FD_REPROCES
/* MCSC - VRA */
#define MAIN_CAMERA_SINGLE_MCSC_VRA_OTF_REPROCESSING    (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_SINGLE_MCSC_VRA_OTF_REPROCESSING   (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_DUAL_MCSC_VRA_OTF_REPROCESSING      (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_DUAL_MCSC_VRA_OTF_REPROCESSING     (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_SINGLE_3AA_VRA_OTF_REPROCESSING     (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_SINGLE_3AA_VRA_OTF_REPROCESSING    (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_PIP_3AA_VRA_OTF_REPROCESSING        (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_PIP_3AA_VRA_OTF_REPROCESSING       (HW_CONNECTION_MODE_NONE)

#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_MCSC_VRA_OTF_REPROCESSING      (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_DUAL_MCSC_VRA_OTF_REPROCESSING     (HW_CONNECTION_MODE_M2M)
#define SUB_CAMERA_DUAL_MCSC_VRA_OTF_REPROCESSING       (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_DUAL_3AA_VRA_OTF_REPROCESSING       (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_DUAL_3AA_VRA_OTF_REPROCESSING      (HW_CONNECTION_MODE_NONE)
#define SUB_CAMERA_DUAL_3AA_VRA_OTF_REPROCESSING        (HW_CONNECTION_MODE_NONE)

#endif
#else /* USE_EARLY_FD_REPROCES */
/* MCSC - VRA */
#define MAIN_CAMERA_SINGLE_MCSC_VRA_OTF_REPROCESSING     (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_SINGLE_MCSC_VRA_OTF_REPROCESSING    (HW_CONNECTION_MODE_NONE)
#define MAIN_CAMERA_PIP_MCSC_VRA_OTF_REPROCESSING        (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_PIP_MCSC_VRA_OTF_REPROCESSING       (HW_CONNECTION_MODE_NONE)
/* 3AA - VRA */
#define MAIN_CAMERA_SINGLE_3AA_VRA_OTF_REPROCESSING     (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_SINGLE_3AA_VRA_OTF_REPROCESSING    (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_PIP_3AA_VRA_OTF_REPROCESSING        (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_PIP_3AA_VRA_OTF_REPROCESSING       (HW_CONNECTION_MODE_M2M)
#ifdef USE_DUAL_CAMERA
#define MAIN_CAMERA_DUAL_3AA_VRA_OTF_REPROCESSING       (HW_CONNECTION_MODE_M2M)
#define FRONT_CAMERA_DUAL_3AA_VRA_OTF_REPROCESSING      (HW_CONNECTION_MODE_M2M)
#define SUB_CAMERA_DUAL_3AA_VRA_OTF_REPROCESSING        (HW_CONNECTION_MODE_M2M)
#define MAIN_CAMERA_DUAL_MCSC_VRA_OTF_REPROCESSING      (HW_CONNECTION_MODE_NONE)
#define FRONT_CAMERA_DUAL_MCSC_VRA_OTF_REPROCESSING      (HW_CONNECTION_MODE_NONE)
#define SUB_CAMERA_DUAL_MCSC_VRA_OTF_REPROCESSING        (HW_CONNECTION_MODE_NONE)
#endif
#endif


#define SCENARIO_SHIFT              (28)
#define REPROCESSING_SHIFT          (28)
#define SSX_VINDEX_SHIFT            (16)

#define SENSOR_INSTANT_SHIFT        (16)
#define SENSOR_USE_STANDBY_SHIFT    (4)

#define INPUT_SENSOR_MASK    0xFC000000 /* sensor scenario */
#define INPUT_SENSOR_SHIFT    26
#define INPUT_STREAM_MASK    0x03000000 /* stream type : 1 (reprocessing) */
#define INPUT_STREAM_SHIFT    24
#define INPUT_POSITION_MASK  0x00FF0000 /* sensor position */
#define INPUT_POSITION_SHIFT  16
#define INPUT_VINDEX_MASK    0x0000FF00 /* video node index : connected node */
#define INPUT_VINDEX_SHIFT    8
#define INPUT_MEMORY_MASK    0x000000F0 /* memory interface : 0 (on-the-fly) */
#define INPUT_MEMORY_SHIFT    4
#define INPUT_LEADER_MASK    0x0000000F /* leader : 1 (leader video node) */
#define INPUT_LEADER_SHIFT    0

#define PREVIEW_GSC_NODE_NUM            (4)  /* 4 = MSC from Exynos5420 */
#define PICTURE_GSC_NODE_NUM            (4)  /* 0,1,2 = GSC */
#define VIDEO_GSC_NODE_NUM              (4)

/*************************
 * Buffer Configurations *
 *************************/
#define MAX_BUFFERS                         (VIDEO_MAX_FRAME)

#ifdef USE_DUAL_CAMERA  // HACK: for test

#define NUM_REQUEST_RAW_BUFFER              (5)
#define NUM_REQUEST_BAYER_BUFFER            (6)
#define NUM_REQUEST_PREVIEW_BUFFER          (11)
#define NUM_REQUEST_CALLBACK_BUFFER         (11)
#define NUM_REQUEST_VIDEO_BUFFER            (11)
#define NUM_REQUEST_JPEG_BUFFER             (4)
#define NUM_REQUEST_BURST_CAPTURE_BUFFER    (4)
#define NUM_REQUEST_CAPTURE_BUFFER          (2)

#define NUM_FASTAESTABLE_BUFFERS            (10)
#define NUM_SENSOR_BUFFERS                  (4 + REPROCESSING_BAYER_HOLD_COUNT + SENSOR_REQUEST_DELAY) * 2 + 4
#define NUM_3AA_BUFFERS                     (6 + SENSOR_REQUEST_DELAY) * 2 + 4
#define NUM_HW_DIS_BUFFERS                  (NUM_3AA_BUFFERS)
#define NUM_VRA_BUFFERS                     (6)

#define DUAL_NUM_REQUEST_PREVIEW_BUFFER     (NUM_REQUEST_PREVIEW_BUFFER + SYNC_WAITING_COUNT)
#define DUAL_NUM_REQUEST_CALLBACK_BUFFER    (NUM_REQUEST_CALLBACK_BUFFER + SYNC_WAITING_COUNT)
#define DUAL_NUM_REQUEST_VIDEO_BUFFER       (NUM_REQUEST_VIDEO_BUFFER + SYNC_WAITING_COUNT)

#define DUAL_NUM_SENSOR_BUFFERS             (NUM_SENSOR_BUFFERS * 2)
#define DUAL_NUM_3AA_BUFFERS                (NUM_3AA_BUFFERS * 2)
#define DUAL_NUM_HW_DIS_BUFFERS             (NUM_HW_DIS_BUFFERS * 2)
#define DUAL_NUM_SYNC_FUSION_BUFFERS        ((SYNC_WAITING_COUNT + 2) * 2)

#else

#define NUM_REQUEST_RAW_BUFFER              (6)
#define NUM_REQUEST_BAYER_BUFFER            (6)
#define NUM_REQUEST_PREVIEW_BUFFER          (8)
#define NUM_REQUEST_CALLBACK_BUFFER         (8)
#define NUM_REQUEST_VIDEO_BUFFER            (8)
#define NUM_REQUEST_JPEG_BUFFER             (4)
#define NUM_REQUEST_BURST_CAPTURE_BUFFER    (4)
#define NUM_REQUEST_CAPTURE_BUFFER          (2)

#define MAX_BUFFERS                     (VIDEO_MAX_FRAME)
#define NUM_FASTAESTABLE_BUFFERS        (10)
#define NUM_SENSOR_BUFFERS              (4 + REPROCESSING_BAYER_HOLD_COUNT + SENSOR_REQUEST_DELAY)
#define NUM_3AA_BUFFERS                 (6 + SENSOR_REQUEST_DELAY)
#define NUM_HW_DIS_BUFFERS              (NUM_3AA_BUFFERS + 1)
#define NUM_VRA_BUFFERS                     (6)
#endif

#define FRONT_NUM_SENSOR_BUFFERS        (NUM_SENSOR_BUFFERS)
#define FRONT_NUM_3AA_BUFFERS           (NUM_3AA_BUFFERS)

#define NUM_REPROCESSING_BUFFERS            (4)
#define NUM_PICTURE_BUFFERS                 (5)

#define NUM_BAYER_BUFFERS                   (5 + REPROCESSING_BAYER_HOLD_COUNT)
#define NUM_PREVIEW_BUFFERS                 (9)
#define NUM_RECORDING_BUFFERS               (8)

#define PIPE_FLITE_PREPARE_COUNT            (2)
#define PIPE_3AA_PREPARE_COUNT              (2)

#ifdef DEBUG_RAWDUMP
#define RESERVED_NUM_BAYER_BUFFERS          (0)
#define RESERVED_NUM_ISP_BUFFERS            (0)
#define FRONT_RESERVED_NUM_BAYER_BUFFERS    (0)
#define FRONT_RESERVED_NUM_ISP_BUFFERS      (0)
#else
#define RESERVED_NUM_BAYER_BUFFERS          (NUM_BAYER_BUFFERS)
#define RESERVED_NUM_ISP_BUFFERS            (0)
#define FRONT_RESERVED_NUM_BAYER_BUFFERS    (6)
#define FRONT_RESERVED_NUM_ISP_BUFFERS      (0)
#endif /* DEBUG_RAWDUMP */
#define RESERVED_NUM_SECURE_BUFFERS     (5)

/* TO DO : will remove */
#define REPROCESSING_BAYER_HOLD_COUNT   (1)

#if (USE_HIGHSPEED_RECORDING)
/* HIGHSPEED_120 */
#define FPS120_NUM_REQUEST_RAW_BUFFER        (NUM_REQUEST_RAW_BUFFER)
#define FPS120_NUM_REQUEST_BAYER_BUFFER      (NUM_REQUEST_BAYER_BUFFER)
#define FPS120_NUM_REQUEST_PREVIEW_BUFFER    (NUM_REQUEST_PREVIEW_BUFFER)
#define FPS120_NUM_REQUEST_CALLBACK_BUFFER   (NUM_REQUEST_CALLBACK_BUFFER * 3)
#define FPS120_NUM_REQUEST_VIDEO_BUFFER      (NUM_REQUEST_VIDEO_BUFFER * 3)
#define FPS120_NUM_REQUEST_JPEG_BUFFER       (NUM_REQUEST_JPEG_BUFFER)
#define FPS120_NUM_REQUEST_BURST_CAPTURE_BUFFER (NUM_REQUEST_BURST_CAPTURE_BUFFER)
#define FPS120_NUM_REQUEST_CAPTURE_BUFFER       (NUM_REQUEST_CAPTURE_BUFFER)

#define FPS120_NUM_SENSOR_BUFFERS            (NUM_SENSOR_BUFFERS * 3)
#define FPS120_NUM_3AA_BUFFERS               (NUM_3AA_BUFFERS * 3)
#define FPS120_NUM_HW_DIS_BUFFERS            (NUM_HW_DIS_BUFFERS * 3)

#define FPS120_NUM_BAYER_BUFFERS             (NUM_BAYER_BUFFERS * 3)
#define FPS120_NUM_PREVIEW_BUFFERS           (NUM_PREVIEW_BUFFERS * 3)
#define FPS120_NUM_RECORDING_BUFFERS         (NUM_RECORDING_BUFFERS * 3)

#ifdef SUPPORT_HFR_BATCH_MODE
#define FPS120_PIPE_FLITE_PREPARE_COUNT      (PIPE_FLITE_PREPARE_COUNT)
#define FPS120_PIPE_3AA_PREPARE_COUNT        (PIPE_3AA_PREPARE_COUNT)
#else
#define FPS120_PIPE_FLITE_PREPARE_COUNT      (PIPE_FLITE_PREPARE_COUNT * 3)
#define FPS120_PIPE_3AA_PREPARE_COUNT        (PIPE_3AA_PREPARE_COUNT * 3)
#endif

/* HIGHSPEED_240 */
#define FPS240_NUM_REQUEST_RAW_BUFFER       	(NUM_REQUEST_RAW_BUFFER)
#define FPS240_NUM_REQUEST_BAYER_BUFFER         (NUM_REQUEST_BAYER_BUFFER)
#define FPS240_NUM_REQUEST_PREVIEW_BUFFER   	(NUM_REQUEST_PREVIEW_BUFFER)
#define FPS240_NUM_REQUEST_CALLBACK_BUFFER  	(NUM_REQUEST_CALLBACK_BUFFER * 3)
#define FPS240_NUM_REQUEST_VIDEO_BUFFER     	(NUM_REQUEST_VIDEO_BUFFER * 3)
#define FPS240_NUM_REQUEST_JPEG_BUFFER      	(NUM_REQUEST_JPEG_BUFFER)
#define FPS240_NUM_REQUEST_BURST_CAPTURE_BUFFER (NUM_REQUEST_BURST_CAPTURE_BUFFER)
#define FPS240_NUM_REQUEST_CAPTURE_BUFFER       (NUM_REQUEST_CAPTURE_BUFFER)

#define FPS240_NUM_SENSOR_BUFFERS           	(NUM_SENSOR_BUFFERS * 3)
#define FPS240_NUM_3AA_BUFFERS              	(32)   /* VIDEO_MAX_FRAME : 32 */
#define FPS240_NUM_HW_DIS_BUFFERS           	(NUM_HW_DIS_BUFFERS * 3)

#define FPS240_NUM_BAYER_BUFFERS        	    (NUM_BAYER_BUFFERS * 3)
#define FPS240_NUM_PREVIEW_BUFFERS          	(NUM_PREVIEW_BUFFERS * 3)
#define FPS240_NUM_RECORDING_BUFFERS        	(NUM_RECORDING_BUFFERS * 3)

#ifdef SUPPORT_HFR_BATCH_MODE
#define FPS240_PIPE_FLITE_PREPARE_COUNT         (PIPE_FLITE_PREPARE_COUNT)
#define FPS240_PIPE_3AA_PREPARE_COUNT           (PIPE_3AA_PREPARE_COUNT)
#else
#define FPS240_PIPE_FLITE_PREPARE_COUNT         (PIPE_FLITE_PREPARE_COUNT * 3)
#define FPS240_PIPE_3AA_PREPARE_COUNT           (PIPE_3AA_PREPARE_COUNT * 3)
#endif

/* HIGHSPEED_480 */
#define FPS480_NUM_REQUEST_RAW_BUFFER           (NUM_REQUEST_RAW_BUFFER)
#define FPS480_NUM_REQUEST_PREVIEW_BUFFER       (NUM_REQUEST_PREVIEW_BUFFER)
#define FPS480_NUM_REQUEST_CALLBACK_BUFFER      (NUM_REQUEST_CALLBACK_BUFFER * 3)
#define FPS480_NUM_REQUEST_VIDEO_BUFFER         (NUM_REQUEST_VIDEO_BUFFER * 3)
#define FPS480_NUM_REQUEST_JPEG_BUFFER          (NUM_REQUEST_JPEG_BUFFER)

#define FPS480_NUM_SENSOR_BUFFERS               (NUM_SENSOR_BUFFERS * 3)
#define FPS480_NUM_3AA_BUFFERS                  (32)   /* VIDEO_MAX_FRAME : 32 */
#define FPS480_NUM_HW_DIS_BUFFERS               (NUM_HW_DIS_BUFFERS * 3)

#define FPS480_NUM_BAYER_BUFFERS                (NUM_BAYER_BUFFERS * 3)
#define FPS480_NUM_PREVIEW_BUFFERS              (NUM_PREVIEW_BUFFERS * 3)
#define FPS480_NUM_RECORDING_BUFFERS            (NUM_RECORDING_BUFFERS * 3)

#ifdef SUPPORT_HFR_BATCH_MODE
#define FPS480_PIPE_FLITE_PREPARE_COUNT         (PIPE_FLITE_PREPARE_COUNT)
#define FPS480_PIPE_3AA_PREPARE_COUNT           (PIPE_3AA_PREPARE_COUNT)
#else
#define FPS480_PIPE_FLITE_PREPARE_COUNT         (PIPE_FLITE_PREPARE_COUNT * 3)
#define FPS480_PIPE_3AA_PREPARE_COUNT           (PIPE_3AA_PREPARE_COUNT * 3)
#endif
#endif

#define EXYNOS_CAMERA_BUFFER_MAX_PLANES (17)     /* img buffer 4 + metadata 1 */
#define EXYNOS_CAMERA_META_PLANE_SIZE   (40 * 1024)
#define EXYNOS_CAMERA_VIDEO_META_PLANE_SIZE   sizeof(ExynosVideoMeta)
#define GRALLOC_LOCK_FOR_CAMERA         (GRALLOC_SET_USAGE_FOR_CAMERA)

#define EXYNOS_CAMERA_DEBUG_INFO_PLANE_SIZE   (100 * 1024)
#define META_PLANE_MASK          0x0000000F /* metadata plane */
#define META_PLANE_SHIFT         0
#define DEBUG_INFO_PLANE_MASK    0x000000F0 /* debugInfo plane */
#define DEBUG_INFO_PLANE_SHIFT   4

#define THUMBNAIL_HISTOGRAM_STAT_MAGIC_PREFIX "DBG^Stat"
#define THUMBNAIL_HISTOGRAM_STAT_MAGIC_PREFIX_SIZE sizeof(THUMBNAIL_HISTOGRAM_STAT_MAGIC_PREFIX)
#define THUMBNAIL_HISTOGRAM_STAT_PRAT1      (60 * 1024)
#define THUMBNAIL_HISTOGRAM_STAT_PRAT2      (40 * 1024)
/*******************************
 * Color Format Configurations *
 *******************************/
#ifndef DEBUG_RAWDUMP
#define CAMERA_PACKED_BAYER_ENABLE
#endif
/* #define CAMERA_PACKED_BAYER_ENABLE */
#define USE_BUFFER_WITH_STRIDE

#define V4L2_CAMERA_MEMORY_TYPE         (V4L2_MEMORY_DMABUF) /* (V4L2_MEMORY_USERPTR) */
#define PREVIEW_OUTPUT_COLOR_FMT        (V4L2_PIX_FMT_NV21M)
#define SCC_OUTPUT_COLOR_FMT            (V4L2_PIX_FMT_YUYV)
#define JPEG_INPUT_COLOR_FMT            (SCC_OUTPUT_COLOR_FMT)
#define CAMERA_3AF_OUTPUT_FORMAT        (V4L2_PIX_FMT_BGR24)

#ifdef CAMERA_PACKED_BAYER_ENABLE
#if defined(SUPPORT_REMOSAIC_ROTATION) || defined(SUPPORT_SENSOR_REMOSAIC_SW) || defined(SUPPORT_VENDOR_TAG_FACTORY_LED_CALIBRATION)
#define CAMERA_FLITE_BAYER_FORMAT               (V4L2_PIX_FMT_SBGGR16)
#else
#define CAMERA_FLITE_BAYER_FORMAT               (V4L2_PIX_FMT_SBGGR12)
#endif
#define CAMERA_3AC_BAYER_FORMAT                 (V4L2_PIX_FMT_SBGGR12)
#define CAMERA_3AP_BAYER_FORMAT                 (V4L2_PIX_FMT_SBGGR12)
#define CAMERA_3AC_REPROCESSING_BAYER_FORMAT    (V4L2_PIX_FMT_SBGGR16)
//#define CAMERA_3AP_REPROCESSING_BAYER_FORMAT    (V4L2_PIX_FMT_SBGGR12P)
#define CAMERA_3AP_REPROCESSING_BAYER_FORMAT    (V4L2_PIX_FMT_SBGGR12)
#else
#define CAMERA_FLITE_BAYER_FORMAT               (V4L2_PIX_FMT_SBGGR16)
#define CAMERA_3AC_BAYER_FORMAT                 (V4L2_PIX_FMT_SBGGR16)
#define CAMERA_3AP_BAYER_FORMAT                 (V4L2_PIX_FMT_SBGGR16)
#define CAMERA_3AC_REPROCESSING_BAYER_FORMAT    (V4L2_PIX_FMT_SBGGR16)
//#define CAMERA_3AP_REPROCESSING_BAYER_FORMAT    (V4L2_PIX_FMT_SBGGR12P)
#define CAMERA_3AP_REPROCESSING_BAYER_FORMAT    (V4L2_PIX_FMT_SBGGR12)
#endif
#define CAMERA_3AG_REPROCESSING_BAYER_FORMAT    (V4L2_PIX_FMT_SBGGR10)

#define DEPTH_MAP_FORMAT                (V4L2_PIX_FMT_SBGGR16)
#define CAMERA_DUMP_BAYER_FORMAT        (V4L2_PIX_FMT_SBGGR16)

/***********
 * Defines *
 ***********/
#define ERROR_POLLING_DETECTED          (-1001)
#define ERROR_DQ_BLOCKED_DETECTED       (-1002)
#define ERROR_DQ_BLOCKED_COUNT          (15)
#define ERROR_RESULT_DALAY_COUNT        (20)
#define MONITOR_THREAD_INTERVAL         (200000)

#define EXYNOS_CAMERA_PREVIEW_FPS_REFERENCE  (60)

#define  NUM_OF_DETECTED_FACES           (16)
#define  NUM_OF_DETECTED_FACES_THRESHOLD (0)

#define PERFRAME_NODE_GROUP_MAX          (6)

#define PERFRAME_INFO_INDEX_MAX          (6)
#define PERFRAME_INFO_INDEX_0            (0)
#define PERFRAME_INFO_INDEX_1            (1)
#define PERFRAME_INFO_INDEX_2            (2)
#define PERFRAME_INFO_INDEX_3            (3)
#define PERFRAME_INFO_INDEX_4            (4)
#define PERFRAME_INFO_INDEX_5            (5)

#define PERFRAME_CONTROL_PIPE                   PIPE_3AA
#define PERFRAME_CONTROL_REPROCESSING_PIPE      PIPE_3AA_REPROCESSING

#define PERFRAME_INFO_3AA                       PERFRAME_INFO_INDEX_0
#define PERFRAME_INFO_ISP                       PERFRAME_INFO_INDEX_1
#define PERFRAME_INFO_DCP                       PERFRAME_INFO_INDEX_2
#define PERFRAME_INFO_TPU                       PERFRAME_INFO_INDEX_2
#define PERFRAME_INFO_DIS                       PERFRAME_INFO_TPU
#define PERFRAME_INFO_MCSC                      PERFRAME_INFO_INDEX_3
#define PERFRAME_INFO_FLITE                     PERFRAME_INFO_INDEX_4
#define PERFRAME_INFO_VRA                       PERFRAME_INFO_INDEX_5

#define PERFRAME_INFO_SWMCSC                    PERFRAME_INFO_INDEX_2

#define PERFRAME_INFO_DIRTY_REPROCESSING_ISP    PERFRAME_INFO_INDEX_0
#define PERFRAME_INFO_DIRTY_REPROCESSING_DCP    PERFRAME_INFO_INDEX_1
#define PERFRAME_INFO_DIRTY_REPROCESSING_MCSC   PERFRAME_INFO_INDEX_2
#define PERFRAME_INFO_DIRTY_REPROCESSING_VRA    PERFRAME_INFO_INDEX_3

#define PERFRAME_INFO_PURE_REPROCESSING_3AA     PERFRAME_INFO_INDEX_0
#define PERFRAME_INFO_PURE_REPROCESSING_ISP     PERFRAME_INFO_INDEX_1
#define PERFRAME_INFO_PURE_REPROCESSING_MCSC    PERFRAME_INFO_INDEX_2
#define PERFRAME_INFO_PURE_REPROCESSING_VRA     PERFRAME_INFO_INDEX_3

#define PERFRAME_INFO_REPROCESSING_SWMCSC       PERFRAME_INFO_INDEX_4

#define PERFRAME_BACK_VC0_POS           (0)
#define PERFRAME_BACK_3AC_POS           (1)
#define PERFRAME_BACK_3AP_POS           (2)
#define PERFRAME_BACK_ISPC_POS          (3)
#define PERFRAME_BACK_ISPP_POS          (4)
#define PERFRAME_BACK_DCPS0_POS         (5)
#define PERFRAME_BACK_DCPS1_POS         (6)
#define PERFRAME_BACK_DCPC0_POS         (7)
#define PERFRAME_BACK_DCPC1_POS         (8)
#define PERFRAME_BACK_DCPC2_POS         (9)
#define PERFRAME_BACK_DCPC3_POS         (10)
#define PERFRAME_BACK_DCPC4_POS         (11)
#define PERFRAME_BACK_CIPC0_POS         (12)
#define PERFRAME_BACK_CIPC1_POS         (13)
#define PERFRAME_BACK_SCC_POS           (0)
#define PERFRAME_BACK_SCP_POS           (4)
#define PERFRAME_BACK_MCSC0_POS         PERFRAME_BACK_SCP_POS
#define PERFRAME_BACK_MCSC1_POS         (1)
#define PERFRAME_BACK_MCSC2_POS         (2)
#define PERFRAME_BACK_MCSC3_POS         (3)
#define PERFRAME_BACK_MCSC4_POS         (4)
#define PERFRAME_BACK_MCSC5_POS         (5)
#define PERFRAME_BACK_ME_POS            (6)
#define PERFRAME_BACK_MCSC_JPEG_POS  (PERFRAME_BACK_MCSC3_POS)
#define PERFRAME_BACK_MCSC_THUMB_POS (PERFRAME_BACK_MCSC4_POS)

#define PERFRAME_FRONT_VC0_POS          (PERFRAME_BACK_VC0_POS)
#define PERFRAME_FRONT_3AC_POS          (PERFRAME_BACK_3AC_POS)
#define PERFRAME_FRONT_3AP_POS          (PERFRAME_BACK_3AP_POS)
#define PERFRAME_FRONT_ISPC_POS         (PERFRAME_BACK_ISPC_POS)
#define PERFRAME_FRONT_ISPP_POS         (PERFRAME_BACK_ISPP_POS)
#define PERFRAME_FRONT_SCC_POS          (PERFRAME_BACK_SCC_POS)
#define PERFRAME_FRONT_SCP_POS          (PERFRAME_BACK_SCP_POS)
#define PERFRAME_FRONT_ME_POS           (PERFRAME_BACK_ME_POS)

#define PERFRAME_REPROCESSING_3AC_POS     (0)
#define PERFRAME_REPROCESSING_3AP_POS     (0)
#define PERFRAME_REPROCESSING_SCC_POS     (2)
#define PERFRAME_REPROCESSING_ISPC_POS    (2)
#define PERFRAME_REPROCESSING_ISPP_POS    (2)
#define PERFRAME_REPROCESSING_DCPS0_POS   (3)
#define PERFRAME_REPROCESSING_DCPC0_POS   (4)
#define PERFRAME_REPROCESSING_DCPS1_POS   (5)
#define PERFRAME_REPROCESSING_DCPC1_POS   (6)
#define PERFRAME_REPROCESSING_DCPC2_POS   (7)
#define PERFRAME_REPROCESSING_DCPC3_POS   (8)
#define PERFRAME_REPROCESSING_DCPC4_POS   (9)
#define PERFRAME_REPROCESSING_CIPS0_POS   (10)
#define PERFRAME_REPROCESSING_CIPS1_POS   (11)
#define PERFRAME_REPROCESSING_MCSC0_POS   (1)
#define PERFRAME_REPROCESSING_MCSC1_POS   (2)
#define PERFRAME_REPROCESSING_MCSC2_POS   (3)
#define PERFRAME_REPROCESSING_MCSC3_POS   (4)
#define PERFRAME_REPROCESSING_MCSC4_POS   (5)
#define PERFRAME_REPROCESSING_MCSC5_POS   (6)
#define PERFRAME_REPROCESSING_MCSC_JPEG_POS  (PERFRAME_REPROCESSING_MCSC3_POS)
#define PERFRAME_REPROCESSING_MCSC_THUMB_POS (PERFRAME_REPROCESSING_MCSC4_POS)

#define WAITING_TIME                     (5000)   /* 5msec */
#define TOTAL_WAITING_TIME               (3000 * 1000)  /* 3000msec */
#define TOTAL_WAITING_COUNT              (3)
#define TOTAL_FLASH_WATING_COUNT         (10)
#define CAPTURE_WAITING_COUNT            (15)

#define DM_WAITING_TIME                  (30 * 1000) /* 30msec */
#define DM_WAITING_COUNT                 (10)

/*vision */
/* #define VISION_DUMP */
#define VISION_WIDTH                     (320)
#define VISION_HEIGHT                    (180)

/* Secure Camera */
#define SECURE_CAMERA_WIDTH              (2400)
#define SECURE_CAMERA_HEIGHT             (2400)

/* MCSC Restriction*/
#define NO_MCSC_RESTRICTION

#define USE_MEM2MEM_GSC
#ifdef USE_MEM2MEM_GSC
#define GRALLOC_SET_USAGE_FOR_CAMERA \
    (GRALLOC_USAGE_SW_READ_OFTEN | \
     GRALLOC_USAGE_SW_WRITE_OFTEN | \
     GRALLOC_USAGE_HW_TEXTURE | \
     GRALLOC_USAGE_HW_COMPOSER | \
     GRALLOC_USAGE_EXTERNAL_DISP | \
     GRALLOC_USAGE_HW_CAMERA_MASK)
#else
#define GRALLOC_SET_USAGE_FOR_CAMERA \
    (GRALLOC_USAGE_SW_READ_OFTEN | \
     GRALLOC_USAGE_SW_WRITE_OFTEN | \
     GRALLOC_USAGE_HW_TEXTURE | \
     GRALLOC_USAGE_HW_COMPOSER | \
     GRALLOC_USAGE_EXTERNAL_DISP)
#endif

enum YUV_RANGE {
    YUV_FULL_RANGE = 0,
    YUV_LIMITED_RANGE = 1,
};

enum pipeline {
    PIPE_FLITE                      = 0,
    PIPE_VC0,
    PIPE_VC1,
    PIPE_VC2,
    PIPE_VC3,
#ifdef USE_PAF
    PIPE_PAF,
#endif
    PIPE_3AA,
    PIPE_3AC,
    PIPE_3AP,
    PIPE_3AF,
    PIPE_3AG,
    PIPE_ISP,                       // 10
    PIPE_ISPC,
    PIPE_ISPP,
    PIPE_ME,
    PIPE_DCP,
    PIPE_DCPS0 = PIPE_DCP,          // 14
    PIPE_DCPC0,
    PIPE_DCPS1,
    PIPE_DCPC1,
    PIPE_DCPC2,
    PIPE_DCPC3,
    PIPE_DCPC4,                     // 20
    PIPE_CIPS0,
    PIPE_CIPS1,
    PIPE_DIS,
    PIPE_TPU = PIPE_DIS,
    PIPE_TPUP,
    PIPE_MCSC,                      // 25
    PIPE_SCP,
    PIPE_MCSC0 = PIPE_SCP,
    PIPE_MCSC1,
    PIPE_MCSC2,
    PIPE_MCSC3,                     // 29
    PIPE_MCSC4,                     // 30
    PIPE_MCSC_JPEG = PIPE_MCSC3,    // 29
    PIPE_MCSC_THUMB = PIPE_MCSC4,   // 30
    PIPE_MCSC5,
    PIPE_VRA,                       // 32
    PIPE_HFD,
    PIPE_GMV,
    PIPE_3AA_ISP,
    PIPE_POST_3AA_ISP,
    PIPE_SCC,
    PIPE_GDC,
    PIPE_STR,
    PIPE_GSC,
    PIPE_GSC_VIDEO,                 // 40
    PIPE_GSC_PICTURE,
    PIPE_JPEG,
    PIPE_HWFC_JPEG_SRC,
    PIPE_HWFC_THUMB_SRC,
    PIPE_HWFC_JPEG_DST,             // 45
    PIPE_HWFC_THUMB_DST,
    PIPE_BAYER_SYNC,
    PIPE_SYNC,
    PIPE_FUSION,
    PIPE_FUSION_FRONT,
    PIPE_VDIS,
    PIPE_VDIS_PREVIEW,
#ifdef USE_SLSI_PLUGIN
    PIPE_PLUGIN_BASE,
    PIPE_PLUGIN1 = PIPE_PLUGIN_BASE,
    PIPE_PLUGIN2,
    PIPE_PLUGIN3,
    PIPE_PLUGIN4,
    PIPE_PLUGIN_MAX = PIPE_PLUGIN4,
#endif
    PIPE_NFD,
    MAX_PIPE_NUM,

    /*
     * PIPE_XXX_FRONT are deprecated define.
     * Don't use this. (just let for common code compile)
     */
    PIPE_FLITE_FRONT = 100,
    PIPE_3AA_FRONT,
    PIPE_3AC_FRONT,
    PIPE_3AP_FRONT,
    PIPE_ISP_FRONT,
    PIPE_ISPC_FRONT,
    PIPE_ISPP_FRONT,
    PIPE_SCP_FRONT,
    PIPE_3AA_ISP_FRONT,
    PIPE_POST_3AA_ISP_FRONT,
    PIPE_DIS_FRONT,
    PIPE_SCC_FRONT,
    PIPE_GSC_FRONT,
    PIPE_GSC_VIDEO_FRONT,
    PIPE_GSC_PICTURE_FRONT,
    PIPE_JPEG_FRONT,
    MAX_PIPE_NUM_FRONT,

    PIPE_FLITE_REPROCESSING     = 200,
    PIPE_VC0_REPROCESSING,
#ifdef USE_PAF
    PIPE_PAF_REPROCESSING,
#endif
    PIPE_3AA_REPROCESSING,
    PIPE_3AC_REPROCESSING,
    PIPE_3AP_REPROCESSING,
    PIPE_3AF_REPROCESSING,
    PIPE_3AG_REPROCESSING,
    PIPE_ISP_REPROCESSING,
    PIPE_ISPC_REPROCESSING,
    PIPE_ISPP_REPROCESSING,
    PIPE_DCP_REPROCESSING,
    PIPE_DCPS0_REPROCESSING = PIPE_DCP_REPROCESSING,
    PIPE_DCPC0_REPROCESSING,
    PIPE_DCPS1_REPROCESSING,
    PIPE_DCPC1_REPROCESSING,
    PIPE_DCPC2_REPROCESSING,
    PIPE_DCPC3_REPROCESSING,
    PIPE_DCPC4_REPROCESSING,
    PIPE_CIPS0_REPROCESSING,
    PIPE_CIPS1_REPROCESSING,
    PIPE_TPU_REPROCESSING,
    PIPE_TPUP_REPROCESSING,
    PIPE_MCSC_REPROCESSING,
    PIPE_MCSC0_REPROCESSING,
    PIPE_MCSC1_REPROCESSING,
    PIPE_MCSC2_REPROCESSING,
    PIPE_MCSC3_REPROCESSING,
    PIPE_MCSC_JPEG_REPROCESSING = PIPE_MCSC3_REPROCESSING,
    PIPE_MCSC4_REPROCESSING,
    PIPE_MCSC_THUMB_REPROCESSING = PIPE_MCSC4_REPROCESSING,
    PIPE_MCSC5_REPROCESSING,
    PIPE_MCSC_PP_REPROCESSING,
    PIPE_VRA_REPROCESSING,
    PIPE_SCC_REPROCESSING,
    PIPE_SCP_REPROCESSING,
    PIPE_GSC_REPROCESSING,
    PIPE_GSC_REPROCESSING2,
    PIPE_GSC_REPROCESSING3,
#ifdef UVS
    PIPE_UVS_REPROCESSING,
#endif
    PIPE_JPEG_REPROCESSING,
    PIPE_JPEG0_REPROCESSING,
    PIPE_JPEG1_REPROCESSING,
    MAX_PIPE_NUM_JPEG_DST_REPROCESSING = PIPE_JPEG1_REPROCESSING,
    PIPE_HWFC_JPEG_SRC_REPROCESSING,
    PIPE_HWFC_THUMB_SRC_REPROCESSING,
    PIPE_HWFC_JPEG_DST_REPROCESSING,
    PIPE_HWFC_THUMB_DST_REPROCESSING,
    PIPE_SYNC_REPROCESSING,
    PIPE_FUSION_REPROCESSING,
    PIPE_FUSION0_REPROCESSING,
    PIPE_FUSION1_REPROCESSING,
    PIPE_FUSION2_REPROCESSING,
    PIPE_LLS_REPROCESSING,
#ifdef USE_SLSI_PLUGIN
    PIPE_PLUGIN_BASE_REPROCESSING,
    PIPE_PLUGIN_PRE1_REPROCESSING = PIPE_PLUGIN_BASE_REPROCESSING,
    PIPE_PLUGIN_PRE2_REPROCESSING,
    PIPE_PLUGIN_POST1_REPROCESSING,
    PIPE_PLUGIN_POST2_REPROCESSING,
    PIPE_PLUGIN_MAX_REPROCESSING = PIPE_PLUGIN_POST2_REPROCESSING,
#endif
    PIPE_NFD_REPROCESSING,
#ifdef USE_SW_MCSC_REPROCESSING
    PIPE_SW_MCSC_REPEOCESSING,
#endif
    PIPE_REMOSAIC_REPROCESSING,
    PIPE_PP_VENDOR_REPROCESSING,
    PIPE_PP_UNI_REPROCESSING = PIPE_PP_VENDOR_REPROCESSING,
    PIPE_PP_UNI_REPROCESSING2,
    MAX_PIPE_NUM_REPROCESSING,

    PIPE_CLONE_START = 1000,
    PIPE_GSC_CLONE =     PIPE_CLONE_START + PIPE_GSC,
    PIPE_FUSION_CLONE =  PIPE_CLONE_START + PIPE_FUSION,     // 1031
    PIPE_PLUGIN_CALLBACK  = PIPE_CLONE_START + PIPE_PLUGIN1,
    PIPE_PLUGIN_RECORDING = PIPE_PLUGIN_CALLBACK + 1,
    PIPE_PLUGIN_PREVIEW   = PIPE_PLUGIN_RECORDING + 1,
    MAX_PIPE_NUM_CLONE = PIPE_CLONE_START + MAX_PIPE_NUM,    // 1035

    MAX_PIPE_NUM_FRONT_CLONE = PIPE_CLONE_START + MAX_PIPE_NUM_FRONT,  // 1116

    MAX_PIPE_NUM_REPROCESSING_CLONE = PIPE_CLONE_START + MAX_PIPE_NUM_REPROCESSING,
};

enum fimc_is_video_dev_num {
    FIMC_IS_VIDEO_BAS_NUM = 100,
    FIMC_IS_VIDEO_SS0_NUM = 101,
    FIMC_IS_VIDEO_SS1_NUM,
    FIMC_IS_VIDEO_SS2_NUM,
    FIMC_IS_VIDEO_SS3_NUM,
    FIMC_IS_VIDEO_SS4_NUM,
    FIMC_IS_VIDEO_SS5_NUM,
    FIMC_IS_VIDEO_SS6_NUM = FIMC_IS_VIDEO_SS5_NUM,   /* TODO: define proper node */
    FIMC_IS_VIDEO_SS7_NUM = FIMC_IS_VIDEO_SS5_NUM,   /* TODO: define proper node */
    FIMC_IS_VIDEO_BNS_NUM = 107,
    FIMC_IS_VIDEO_PRE_NUM = 109,
    FIMC_IS_VIDEO_30S_NUM = 110,
    FIMC_IS_VIDEO_30C_NUM,
    FIMC_IS_VIDEO_30P_NUM,
    FIMC_IS_VIDEO_30F_NUM,
    FIMC_IS_VIDEO_30G_NUM,
    FIMC_IS_VIDEO_31S_NUM = 120,
    FIMC_IS_VIDEO_31C_NUM,
    FIMC_IS_VIDEO_31P_NUM,
    FIMC_IS_VIDEO_31F_NUM,
    FIMC_IS_VIDEO_31G_NUM,
    FIMC_IS_VIDEO_I0S_NUM = 130,
    FIMC_IS_VIDEO_I0C_NUM,
    FIMC_IS_VIDEO_I0P_NUM,
    FIMC_IS_VIDEO_I1S_NUM = 140,
    FIMC_IS_VIDEO_I1C_NUM,
    FIMC_IS_VIDEO_I1P_NUM,
    FIMC_IS_VIDEO_ME0C_NUM = 148,
    FIMC_IS_VIDEO_DCP0S_NUM = 150,
    FIMC_IS_VIDEO_DCP0C_NUM,
    FIMC_IS_VIDEO_DCP1S_NUM,
    FIMC_IS_VIDEO_DCP1C_NUM,
    FIMC_IS_VIDEO_DCP2C_NUM,
    FIMC_IS_VIDEO_GDC_NUM = 155,
    FIMC_IS_VIDEO_STR_NUM,
    FIMC_IS_VIDEO_DCP4C_NUM,
    FIMC_IS_VIDEO_SCC_NUM,
    FIMC_IS_VIDEO_SCP_NUM,
    FIMC_IS_VIDEO_M0S_NUM = 160,
    FIMC_IS_VIDEO_M1S_NUM,
    FIMC_IS_VIDEO_M0P_NUM = 170,
    FIMC_IS_VIDEO_M1P_NUM,
    FIMC_IS_VIDEO_M2P_NUM,
    FIMC_IS_VIDEO_M3P_NUM,
    FIMC_IS_VIDEO_M4P_NUM,
    FIMC_IS_VIDEO_M5P_NUM,
    FIMC_IS_VIDEO_VRA_NUM = 180,
    FIMC_IS_VIDEO_D0S_NUM = 190,
    FIMC_IS_VIDEO_D0C_NUM,
    FIMC_IS_VIDEO_D1S_NUM,
    FIMC_IS_VIDEO_D1C_NUM,
    FIMC_IS_VIDEO_HWFC_JPEG_NUM = 200,
    FIMC_IS_VIDEO_HWFC_THUMB_NUM = 201,
    FIMC_IS_VIDEO_CIP0S_NUM = 205,
    FIMC_IS_VIDEO_CIP1S_NUM = 206,
    FIMC_IS_VIDEO_SS0VC0_NUM = 210,
    FIMC_IS_VIDEO_SS0VC1_NUM,
    FIMC_IS_VIDEO_SS0VC2_NUM,
    FIMC_IS_VIDEO_SS0VC3_NUM,
    FIMC_IS_VIDEO_SS1VC0_NUM,
    FIMC_IS_VIDEO_SS1VC1_NUM,
    FIMC_IS_VIDEO_SS1VC2_NUM,
    FIMC_IS_VIDEO_SS1VC3_NUM,
    FIMC_IS_VIDEO_SS2VC0_NUM,
    FIMC_IS_VIDEO_SS2VC1_NUM,
    FIMC_IS_VIDEO_SS2VC2_NUM = 220,
    FIMC_IS_VIDEO_SS2VC3_NUM,
    FIMC_IS_VIDEO_SS3VC0_NUM,
    FIMC_IS_VIDEO_SS3VC1_NUM,
    FIMC_IS_VIDEO_SS3VC2_NUM,
    FIMC_IS_VIDEO_SS3VC3_NUM = 225,
    FIMC_IS_VIDEO_SS4VC0_NUM,
    FIMC_IS_VIDEO_SS4VC1_NUM,
    FIMC_IS_VIDEO_SS4VC2_NUM,
    FIMC_IS_VIDEO_SS4VC3_NUM,
    FIMC_IS_VIDEO_SS5VC0_NUM,
    FIMC_IS_VIDEO_SS5VC1_NUM,
    FIMC_IS_VIDEO_SS5VC2_NUM,
    FIMC_IS_VIDEO_SS5VC3_NUM,
    FIMC_IS_VIDEO_SS6VC1_NUM,  /* TODO: define proper node */
    FIMC_IS_VIDEO_SS7VC1_NUM,  /* TODO: define proper node */
#ifdef USE_PAF
    FIMC_IS_VIDEO_PAF0S_NUM = 240,
    FIMC_IS_VIDEO_PAF1S_NUM = 241,
#endif
    FIMC_IS_VIDEO_MAX_NUM
};

enum fimc_is_virtual_video_dev_num {
    FIMC_IS_VIRTUAL_VIDEO_BASE = FIMC_IS_VIDEO_MAX_NUM,
    FIMC_IS_VIRTUAL_VIDEO_PP,
    FIMC_IS_VIRTUAL_VIDEO_MAX,
};

#define VIRTUAL_VIDEO_COUNT     (FIMC_IS_VIRTUAL_VIDEO_MAX - FIMC_IS_VIRTUAL_VIDEO_BASE-1)
#define VIRTUAL_MCSC_MAX        (MCSC_PORT_MAX + VIRTUAL_VIDEO_COUNT + 1)
#define VIRTUAL_MCSC_PORT_6     (MCSC_PORT_MAX + VIRTUAL_VIDEO_COUNT)

/* overflow handling */
#define SENSOR_OVERFLOW_CHECK
#define AVOID_ASSERT_FRAME
#define AVOID_ASSERT_WAIT_STATE_FLUSH

#ifdef SUPPORT_ME
#define LEADER_PIPE_OF_ME PIPE_ISP
#endif //SUPPORT_ME

/* ########################################### */
/* configuration for plugin library version    */

#define PLUGIN_HIFILLS_VERSION     "MFSTILL ver(1.1)"
/* ########################################### */

#endif /*USE_VENDOR_SPECIFIC_CONFIG_HEADER*/

#endif /* EXYNOS_CAMERA_CONFIG_H__ */
